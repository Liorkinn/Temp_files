Для запуска функции в отдельном потоке в Qt вы можете использовать класс `QThread`. Вот простой пример:

```cpp
class MyThread : public QThread
{
public:
    void run() override {
        // код вашей функции
    }
};

// создаем и запускаем поток
MyThread* thread = new MyThread();
thread->start();
```

Класс `MyThread` наследуется от `QThread` и переопределяет метод `run()`, в котором вы можете поместить код, который будет выполняться в отдельном потоке.

Для более сложных задач, если вам нужно получать результаты от потока, можно использовать сигналы и слоты.  В этом случае вам следует определить собственный сигнал в потоке. Когда вы хотите отправить результаты в основной поток, вызовите сигнал.

```cpp
class MyThread : public QThread
{
    Q_OBJECT

signals:
    void resultReady(int result);

private:
    void run() override {
        int result = 0;
        // выполнение функции, которая может занять много времени
        emit resultReady(result);
    }
};

// создаем поток и соединяемся с сигналом resultReady
MyThread *thread = new MyThread;
QObject::connect(thread, &MyThread::resultReady, [] (int result) {
    // получаем результаты от потока
});

thread->start();
```

Здесь, когда метод `run()` завершится, он отправит сигнал `resultReady()`, который соединен с лямбда-функцией, которая получит результаты и обработает их соответствующим образом.
