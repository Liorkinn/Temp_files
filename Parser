Вот пример кода на C++/Qt, который парсит JSON файл и извлекает данные по указанному имени тега:

```cpp
#include <QCoreApplication>
#include <QFile>
#include <QJsonDocument>
#include <QJsonObject>
#include <QJsonArray>
#include <QDebug>

void parseJson(const QJsonObject &jsonObject, const QString &tagName)
{
    if (jsonObject.contains(tagName)) {
        QJsonValue tagValue = jsonObject.value(tagName);
        if (tagValue.isArray()) {
            QJsonArray tagArray = tagValue.toArray();
            for (int i = 0; i < tagArray.size(); i++) {
                QJsonValue itemValue = tagArray.at(i);
                if (itemValue.isObject()) {
                    QJsonObject itemObject = itemValue.toObject();
                    // Обработка данных объекта
                    qDebug() << "Item" << i << "Data:" << itemObject;
                }
            }
        } else if (tagValue.isObject()) {
            QJsonObject tagObject = tagValue.toObject();
            // Обработка данных объекта
            qDebug() << "Tag Data:" << tagObject;
        }
    }
}

int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);

    QFile jsonFile(":/example.json"); // Путь к JSON файлу
    if (!jsonFile.open(QIODevice::ReadOnly)) {
        qDebug() << "Failed to open JSON file";
        return -1;
    }

    QByteArray jsonData = jsonFile.readAll();
    jsonFile.close();

    QJsonDocument jsonDoc = QJsonDocument::fromJson(jsonData);
    if (!jsonDoc.isNull()) {
        if (jsonDoc.isObject()) {
            QJsonObject jsonObject = jsonDoc.object();

            QString tagName = "exampleTag"; // Имя тега, данные которого нужно извлечь
            parseJson(jsonObject, tagName);
        } else {
            qDebug() << "JSON document is not an object.";
        }
    } else {
        qDebug() << "Failed to parse JSON document.";
    }

    return a.exec();
}
```

В этом примере JSON файл считывается из ресурсов приложения. Вы можете изменить путь к файлу, используя полный путь на вашей системе или изменяя функцию QFile::setFileName().

В функции parseJson() передается объект JSON и имя тега, по которому нужно извлечь данные. Если JSON объект содержит массив, то внутри цикла происходит обработка каждого элемента массива как отдельного JSON объекта.

Обработка данных объекта может быть заменена на ваши собственные действия с этими данными.


